version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile.devel
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    depends_on:
      - db
    environment:
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=${MONGO_DB}-devel
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - NODE_ENV=development
      - SERVER_PORT=8080
    networks:
      - app-network
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    command: /home/node/app/node_modules/.bin/nodemon server

  db:
    image: mongo:4.2.2-bionic
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata:/data/db
    networks:
      - app-network

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - nodejs
    volumes:
      - ./web-root:/var/www/html
      - ./nginx-conf-devel:/etc/nginx/conf.d
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:
