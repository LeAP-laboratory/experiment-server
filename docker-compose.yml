version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    depends_on:
      - db
    environment:
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - SERVER_PORT=8080
      - NODE_ENV=production
    volumes:
      - ./logs:/home/node/app/logs
    networks:
      - app-network
    command: node server

  db:
    image: mongo:4.2.2-bionic
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata:/data/db
    networks:
      - app-network

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    env_file: .env
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - nodejs
    volumes:
      - ./web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d/template
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./dhparam:/etc/ssl/certs
    networks:
      - app-network
    command: /bin/sh -c "envsubst '$$DOMAIN' < /etc/nginx/conf.d/template/nginx.conf > /etc/nginx/conf.d/nginx.conf && exec nginx -g 'daemon off;'"
      
networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  certbot-etc:
  certbot-var:
